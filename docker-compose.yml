services:
  postgres:
    image: postgres:15-alpine
    container_name: schreiber-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: schreiber
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: schreiber-app
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - AUTH_SECRET=${AUTH_SECRET:-vDIeKgZ/VEv8NgCeUM11qQ9W/7o86SkZHw3UGbf0LGs=}
      - XAI_API_KEY=${XAI_API_KEY:-dummy_key}
      - BLOB_READ_WRITE_TOKEN=${BLOB_READ_WRITE_TOKEN:-dummy_token}
      - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/schreiber
      - PNPM_HOME=/app/.pnpm
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - next_cache:/app/.next
      - pnpm_store:/app/.pnpm

volumes:
  postgres_data:
  next_cache:
  pnpm_store:
